% Punto 1
% Dada una calificación entera, se devuelve su equivalente en letra,
% basado en el sistema de calificaciones.
% X -> El número que se recibe
% para evaluar su letra equivalente. Y -> El valor de la letra, luego de
% evaluar.
notaaletra(X,Y):-X>=90,Y='A'.
notaaletra(X,Y):-X>=80,X<90,Y='B'.
notaaletra(X,Y):-X>=70,X<80,Y='C'.
notaaletra(X,Y):-X>=60,X<70,Y='D'.
notaaletra(X,Y):-X<60,X>=0,Y='F'.
notaaletra(X,Y):-X<0,Y='No es un numero positivo'.
% Punto 2
% Se determina el sucesor de un número, que es el que se encuentra
% inmediatamente después de él.
% X -> El número que se recibe.
% Y -> El valor del sucesor de X.
sucesor(X,Y):-Y is X + 1.
% Punto 3
antepenultimo([X,_,_],X).
antepenultimo([_,Y|Z],X):-antepenultimo([Y|Z],X).
% Punto 4
% Se devuelve una lista con los números pares encontrados en la lista
% inicial. Utilizo par como regla auxiliar para simplificar la regla
% pares. Para una lista vacía, pares devuelve otra lista vacía (caso más
% sencillo). X es el número que se está evaluando, la cabeza de la
% lista. Y toma el valor de la cola. Z es la lista en la que se agregan
% los números pares. La variable anónima se utiliza para descartar un
% número, en caso de que sea impar.
par(X):-X mod 2 =:= 0.
pares([],[]).
pares([X|Y],[X|Z]):-par(X),pares(Y,Z).
pares([_|Y],Z):-pares(Y,Z).
% Punto 5
% Se devuelve una lista inversa a la lista original.
% Existen dos casos base: si la lista está vacía, su inversa es otra
% lista vacía. Si la lista solo tiene un elemento, su inversa es la
% misma lista. X toma el valor de la cabeza de la lista que se envía. Y
% contiene la cola. Z es la lista inversa de la original. Cuando se
% recorre la lista y solo queda un elemento, la regla se cumple y se
% hacen los append's necesarios. W se utiliza para ir construyendo la
% lista.
inversa([],[]).
inversa([X],[X]).
inversa([X|Y],Z):-inversa(Y,W),append(W,[X],Z).





















